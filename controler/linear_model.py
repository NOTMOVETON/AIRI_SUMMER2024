

import control


class LinModelSigway:
    def __init__(self, m_C, r, I_wa, I_wd, b, g, I_yy, I_zz, m_W, c_l, c_r) -> None:
        self.A = lambda l: [[0, 0, 0, 1, 0, 0], [0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 1], [0, 0, -0.5*g*l**2*m_C**2*r**2/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2), 0.5*(-I_yy*c_l - I_yy*c_r - c_l*l**2*m_C - c_l*l*m_C*r - c_r*l**2*m_C - c_r*l*m_C*r)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2), 0.5*b*(I_yy*c_l - I_yy*c_r + c_l*l**2*m_C + c_l*l*m_C*r - c_r*l**2*m_C - c_r*l*m_C*r)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2), 0.5*r*(I_yy*c_l + I_yy*c_r + c_l*l**2*m_C + c_l*l*m_C*r + c_r*l**2*m_C + c_r*l*m_C*r)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2)], [0, 0, 0, 0.5*b*(c_l - c_r)/(1.0*I_wa*b**2 + 1.0*I_wd*r**2 + 0.5*I_zz*r**2 + 1.0*b**2*m_W*r**2), -0.5*b**2*(c_l + c_r)/(1.0*I_wa*b**2 + 1.0*I_wd*r**2 + 0.5*I_zz*r**2 + 1.0*b**2*m_W*r**2), 0.5*b*r*(-c_l + c_r)/(1.0*I_wa*b**2 + 1.0*I_wd*r**2 + 0.5*I_zz*r**2 + 1.0*b**2*m_W*r**2)], [0, 0, g*l*m_C*(1.0*I_wa + 0.5*m_C*r**2 + 1.0*m_W*r**2)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2), (1.0*I_wa*c_l + 1.0*I_wa*c_r + 0.5*c_l*l*m_C*r + 0.5*c_l*m_C*r**2 + 1.0*c_l*m_W*r**2 + 0.5*c_r*l*m_C*r + 0.5*c_r*m_C*r**2 + 1.0*c_r*m_W*r**2)/(r*(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2)), b*(-1.0*I_wa*c_l + 1.0*I_wa*c_r - 0.5*c_l*l*m_C*r - 0.5*c_l*m_C*r**2 - 1.0*c_l*m_W*r**2 + 0.5*c_r*l*m_C*r + 0.5*c_r*m_C*r**2 + 1.0*c_r*m_W*r**2)/(r*(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2)), (-1.0*I_wa*c_l - 1.0*I_wa*c_r - 0.5*c_l*l*m_C*r - 0.5*c_l*m_C*r**2 - 1.0*c_l*m_W*r**2 - 0.5*c_r*l*m_C*r - 0.5*c_r*m_C*r**2 - 1.0*c_r*m_W*r**2)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2)]]
        self.B = lambda l:  [[0, 0], [0, 0], [0, 0], [0.5*r*(I_yy + l**2*m_C + l*m_C*r)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2), 0.5*r*(I_yy + l**2*m_C + l*m_C*r)/(1.0*I_wa*I_yy + 1.0*I_wa*l**2*m_C + 0.5*I_yy*m_C*r**2 + 1.0*I_yy*m_W*r**2 + 1.0*l**2*m_C*m_W*r**2)], [1.0*b*r/(2.0*I_wa*b**2 + 2.0*I_wd*r**2 + 1.0*I_zz*r**2 + 2.0*b**2*m_W*r**2), -1.0*b*r/(2.0*I_wa*b**2 + 2.0*I_wd*r**2 + 1.0*I_zz*r**2 + 2.0*b**2*m_W*r**2)], [(-2.0*I_wa - 1.0*l*m_C*r - 1.0*m_C*r**2 - 2.0*m_W*r**2)/(2.0*I_wa*I_yy + 2.0*I_wa*l**2*m_C + 1.0*I_yy*m_C*r**2 + 2.0*I_yy*m_W*r**2 + 2.0*l**2*m_C*m_W*r**2), (-2.0*I_wa - 1.0*l*m_C*r - 1.0*m_C*r**2 - 2.0*m_W*r**2)/(2.0*I_wa*I_yy + 2.0*I_wa*l**2*m_C + 1.0*I_yy*m_C*r**2 + 2.0*I_yy*m_W*r**2 + 2.0*l**2*m_C*m_W*r**2)]]
        
    def calculate_lqr(self, Q, R, l):
        return control.lqr(self.A(l), self.B(l), Q, R)[0]